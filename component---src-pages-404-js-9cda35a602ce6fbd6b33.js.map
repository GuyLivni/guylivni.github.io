{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components_Seo__WEBPACK_IMPORTED_MODULE_2__","_constants__WEBPACK_IMPORTED_MODULE_3__","Title","styled","withConfig","componentId","_ref","theme","css","colors","p400","Text","NotFoundPage","a","createElement","title","notFound","ROUTE_NOT_FOUND_TITLE","ROUTE_NOT_FOUND_TEXT","SEO","description","lang","meta","keywords","site","_2417117884","data","metaDescription","siteMetadata","react_default","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Seo"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,GASMS,EAAQC,YAAO,MAAVC,WAAA,CAAAC,YAAA,eAAGF,CAAH,QAJS,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAeC,YAAf,eACTD,EAAME,OAAOC,QAOlBC,EAAOR,YAAO,KAAVC,WAAA,CAAAC,YAAA,eAAGF,CAAH,wBAcKS,UAVf,WACE,OACEf,EAAAgB,EAAAC,cAAClB,EAAA,SAAD,KACEC,EAAAgB,EAAAC,cAACd,EAAA,EAAD,CAAKe,MAAM,mBACXlB,EAAAgB,EAAAC,cAACZ,EAAD,KAAQc,IAASC,uBACjBpB,EAAAgB,EAAAC,cAACH,EAAD,KAAOK,IAASE,2QCVtB,SAASC,EAATb,GAA2D,IAA5Cc,EAA4Cd,EAA5Cc,YAAaC,EAA+Bf,EAA/Be,KAAMC,EAAyBhB,EAAzBgB,KAAMC,EAAmBjB,EAAnBiB,SAAUR,EAAST,EAATS,MACxCS,EADiDC,EAAAC,KACjDF,KAcFG,EAAkBP,GAAeI,EAAKI,aAAaR,YAEzD,OACES,EAAAhB,EAAAC,cAACgB,EAAAjB,EAAD,CACEkB,eAAgB,CACdV,QAEFN,MAAOA,EACPiB,cAAa,QAAUR,EAAKI,aAAab,MACzCO,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASnB,GAEX,CACEoB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASnB,GAEX,CACEkB,KAAI,sBACJC,QAASP,IAGVU,OACCd,EAASe,OAAS,EACd,CACEL,KAAI,WACJC,QAASX,EAASgB,KAAT,OAEX,IAELF,OAAOf,KAKhBH,EAAIqB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIsB,UAAY,CACdrB,YAAasB,IAAUC,OACvBtB,KAAMqB,IAAUC,OAChBrB,KAAMoB,IAAUE,MAChBrB,SAAUmB,IAAUG,QAAQH,IAAUC,QACtC5B,MAAO2B,IAAUC,OAAOG,YAGX3B,QC/FA4B","file":"component---src-pages-404-js-9cda35a602ce6fbd6b33.js","sourcesContent":["import React, { Fragment } from 'react';\nimport styled, { css } from 'styled-components';\nimport SEO from '../components/Seo';\nimport { notFound } from '../constants';\n\nconst titleStyles = ({ theme }) => css`\n  color: ${theme.colors.p400};\n`;\n\nconst Title = styled('h1')`\n  ${titleStyles}\n`;\n\nconst Text = styled('p')`\n  text-align: center;\n`;\n\nfunction NotFoundPage() {\n  return (\n    <Fragment>\n      <SEO title=\"404: Not Found\" />\n      <Title>{notFound.ROUTE_NOT_FOUND_TITLE}</Title>\n      <Text>{notFound.ROUTE_NOT_FOUND_TEXT}</Text>\n    </Fragment>\n  );\n}\n\nexport default NotFoundPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Seo from './Seo';\n\nexport default Seo;\n"],"sourceRoot":""}