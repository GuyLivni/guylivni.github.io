{"version":3,"sources":["webpack://guy-livni-site/./src/components/Sections/components/Section/Section.tsx","webpack://guy-livni-site/./src/components/Sections/components/Section/index.ts","webpack://guy-livni-site/./src/components/Sections/Sections.tsx","webpack://guy-livni-site/./src/components/Sections/index.ts","webpack://guy-livni-site/./src/components/Seo/index.ts","webpack://guy-livni-site/./src/components/Seo/Seo.tsx","webpack://guy-livni-site/./src/components/About/About.styled.ts","webpack://guy-livni-site/./src/components/About/index.ts","webpack://guy-livni-site/./src/components/About/About.tsx","webpack://guy-livni-site/./src/components/SkillsList/components/SkillItem/SkillItem.styled.tsx","webpack://guy-livni-site/./src/components/SkillsList/components/SkillItem/index.ts","webpack://guy-livni-site/./src/components/SkillsList/components/SkillItem/SkillItem.tsx","webpack://guy-livni-site/./src/components/SkillsList/SkillsList.styled.tsx","webpack://guy-livni-site/./src/components/SkillsList/index.ts","webpack://guy-livni-site/./src/components/SkillsList/SkillsList.tsx","webpack://guy-livni-site/./src/pages/about.tsx"],"names":["Container","styled","children","rest","SectionsContainer","sections","components","map","section","index","__typename","Component","key","description","lang","meta","keywords","title","metadata","useSiteData","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","siteUrl","author","concat","length","join","theme","css","device","tablet","wideDesktop","TitleContainer","Title","colors","p400","ContentContainer","Image","GatsbyImage","Text","textColor","image","alt","desktop","SkillTitle","p600","Skill","item","skills","skill","ContentfulShortText","About","ContentfulSkillsList","SkillsList","data","avatar","contentfulPage","Fragment","Sections","childImageSharp","gatsbyImageData"],"mappings":"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","file":"component---src-pages-about-tsx-1a32a4aaef784389023a.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled('div')`\n  margin-bottom: 40px;\n\n  :only-child,\n  :last-child {\n    margin: 0;\n  }\n`;\n\ntype SectionProps = {\n  children: React.ReactNode;\n};\n\nconst Section = ({ children, ...rest }: SectionProps) => {\n  return <Container {...rest}>{children}</Container>;\n};\n\nexport default Section;\n","import Section from './Section';\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Section from './components/Section';\n\nconst SectionsContainer = styled('div')`\n  width: 100%;\n`;\n\ntype SectionProps = {\n  __typename: string;\n};\n\ntype SectionsProps = {\n  sections: SectionProps[];\n  components: Record<string, React.ElementType>;\n};\n\nconst Sections = ({ sections, components, ...rest }: SectionsProps) => {\n  return (\n    <SectionsContainer>\n      {sections.map((section, index) => {\n        const { __typename } = section;\n        const Component = components?.[__typename];\n\n        if (!Component) {\n          return null;\n        }\n\n        return (\n          <Section key={index}>\n            <Component {...{ ...section, ...rest }} />\n          </Section>\n        );\n      })}\n    </SectionsContainer>\n  );\n};\n\nexport default Sections;\n","import Sections from './Sections';\n\nexport default Sections;\n","import Seo from './Seo';\n\nexport default Seo;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useSiteData } from '../../hooks';\n\ntype SEOProps = {\n  description?: string;\n  lang?: string;\n  meta?: [];\n  keywords?: string[];\n  title: string;\n};\n\nconst SEO = ({\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n  title,\n}: SEOProps) => {\n  const { metadata } = useSiteData();\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${metadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:url',\n          content: metadata.siteUrl,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: metadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n};\n\nexport default SEO;\n","import { GatsbyImage } from 'gatsby-plugin-image';\nimport styled, { css, DefaultTheme } from 'styled-components';\n\nconst containerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  flex-direction: column;\n\n  @media ${theme.device.tablet} {\n    margin-top: 50px;\n    display: flex;\n  }\n\n  @media ${theme.device.wideDesktop} {\n    margin-top: 100px;\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nexport const Container = styled('div')`\n  ${containerStyles}\n`;\n\nconst titleContainerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  @media ${theme.device.wideDesktop} {\n    width: 30%;\n    margin-right: 10%;\n  }\n`;\n\nexport const TitleContainer = styled('div')`\n  ${titleContainerStyles}\n`;\n\nconst titleStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  margin-top: 0;\n  color: ${theme.colors.p400};\n\n  @media ${theme.device.wideDesktop} {\n    font-size: 2rem;\n  }\n`;\n\nexport const Title = styled('h2')`\n  ${titleStyles}\n`;\n\nconst contentContainerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  @media ${theme.device.wideDesktop} {\n    width: 60%;\n  }\n`;\n\nexport const ContentContainer = styled('div')`\n  ${contentContainerStyles}\n`;\n\nconst imageStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  left: 0;\n  top: 0;\n  margin-bottom: 20px;\n  max-height: 160px;\n\n  @media ${theme.device.wideDesktop} {\n    max-height: 300px;\n  }\n`;\n\nexport const Image = styled(GatsbyImage)`\n  ${imageStyles}\n`;\n\nconst textStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  color: ${theme.colors.textColor};\n\n  @media ${theme.device.wideDesktop} {\n    width: 80%;\n  }\n`;\n\nexport const Text = styled('p')`\n  ${textStyles}\n`;\n","import About from './About';\n\nexport default About;\n","import React from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport {\n  Container,\n  TitleContainer,\n  Title,\n  ContentContainer,\n  Image,\n  Text,\n} from './About.styled';\n\ntype AboutProps = {\n  title: string;\n  image: IGatsbyImageData;\n  content: Record<string, string>;\n};\n\nconst About = ({ title, image, content }: AboutProps) => {\n  return (\n    <Container>\n      <TitleContainer>\n        <Title>{title}</Title>\n      </TitleContainer>\n      <ContentContainer>\n        <Image image={image} alt=\"Author image\" />\n        <Text>{content.content}</Text>\n      </ContentContainer>\n    </Container>\n  );\n};\n\nexport default About;\n","import styled, { css, DefaultTheme } from 'styled-components';\n\nconst containerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  margin: 40px 40px 0 0;\n\n  :first-child {\n    margin-top: 0;\n  }\n\n  @media ${theme.device.desktop} {\n    margin: 0 80px 0 0;\n  }\n`;\n\nexport const Container = styled('div')`\n  ${containerStyles}\n`;\n\nconst skillTitleStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  color: ${theme.colors.p600};\n  margin: 0 0 1rem 0;\n  font-size: 1.5rem;\n  letter-spacing: 0;\n  text-transform: none;\n`;\n\nexport const SkillTitle = styled('h4')`\n  ${skillTitleStyles}\n`;\n\nconst skillStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  color: ${theme.colors.textColor};\n`;\n\nexport const Skill = styled('li')`\n  ${skillStyles}\n`;\n","import SkillItem from './SkillItem';\n\nexport default SkillItem;\n","import React from 'react';\nimport { Container, SkillTitle, Skill } from './SkillItem.styled';\n\ntype SkillItemProps = {\n  title: string;\n  description: string[];\n};\n\nconst SkillItem = ({ title, description }: SkillItemProps) => {\n  return (\n    <Container>\n      <SkillTitle>{title}</SkillTitle>\n      <ul>\n        {description.map((item, index) => (\n          <Skill key={index}>{item}</Skill>\n        ))}\n      </ul>\n    </Container>\n  );\n};\n\nexport default SkillItem;\n","import styled, { css, DefaultTheme } from 'styled-components';\n\nconst containerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  @media ${theme.device.wideDesktop} {\n    display: flex;\n  }\n`;\n\nexport const Container = styled('div')`\n  ${containerStyles}\n`;\n\nconst titleContainerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  @media ${theme.device.wideDesktop} {\n    width: 30%;\n    margin-right: 10%;\n  }\n`;\n\nexport const TitleContainer = styled('div')`\n  ${titleContainerStyles}\n`;\n\nconst titleStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  margin-top: 0;\n  color: ${theme.colors.p400};\n\n  @media ${theme.device.wideDesktop} {\n    font-size: 2rem;\n  }\n`;\n\nexport const Title = styled('h2')`\n  ${titleStyles}\n`;\n\nconst contentContainerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n\n  @media ${theme.device.desktop} {\n    flex-direction: row;\n  }\n\n  @media ${theme.device.wideDesktop} {\n    width: 60%;\n  }\n`;\n\nexport const ContentContainer = styled('div')`\n  ${contentContainerStyles}\n`;\n","import SkillsList from './SkillsList';\n\nexport default SkillsList;\n","import React from 'react';\nimport SkillItem from './components/SkillItem';\nimport {\n  Container,\n  TitleContainer,\n  Title,\n  ContentContainer,\n} from './SkillsList.styled';\n\ntype Skills = {\n  title: string;\n  description: string[];\n};\n\ntype SkillsListProps = {\n  title: string;\n  skills: Skills[];\n};\n\nconst SkillsList = ({ title, skills }: SkillsListProps) => (\n  <Container>\n    <TitleContainer>\n      <Title>{title}</Title>\n    </TitleContainer>\n    <ContentContainer>\n      {skills.map((skill, index) => (\n        <SkillItem\n          key={index}\n          title={skill.title}\n          description={skill.description}\n        />\n      ))}\n    </ContentContainer>\n  </Container>\n);\n\nexport default SkillsList;\n","import React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\n\nimport SEO from '../components/Seo';\nimport About from '../components/About';\nimport SkillsList from '../components/SkillsList';\nimport Sections from '../components/Sections';\nimport { Page } from '../types/Page';\n\nconst components = {\n  ContentfulShortText: About,\n  ContentfulSkillsList: SkillsList,\n};\n\ntype AboutPageProps = {\n  data: Page;\n};\n\nconst AboutPage = ({ data }: AboutPageProps) => {\n  const { avatar, contentfulPage } = data;\n  const { sections, metadata } = contentfulPage;\n\n  return (\n    <Fragment>\n      <SEO title={metadata.title} keywords={[metadata.keywords]} />\n      <Sections\n        sections={sections}\n        components={components}\n        {...{ image: avatar?.childImageSharp?.gatsbyImageData }}\n      />\n    </Fragment>\n  );\n};\n\nexport default AboutPage;\n\nexport const pageQuery = graphql`\n  query {\n    #About Page\n    contentfulPage(contentful_id: { eq: \"23SYEgU5fSM0p3cLmp54zm\" }) {\n      sections {\n        ... on ContentfulShortText {\n          name\n          title\n          content {\n            content\n          }\n          __typename\n        }\n        ... on ContentfulSkillsList {\n          name\n          title\n          skills {\n            title\n            description\n          }\n          __typename\n        }\n      }\n      metadata {\n        title\n        keywords\n      }\n    }\n    avatar: file(absolutePath: { regex: \"/guy-about.jpg/\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: CONSTRAINED)\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}