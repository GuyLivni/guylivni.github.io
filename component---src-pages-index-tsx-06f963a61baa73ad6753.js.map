{"version":3,"sources":["webpack://guy-livni-site/./src/components/Sections/components/Section/Section.tsx","webpack://guy-livni-site/./src/components/Sections/components/Section/index.ts","webpack://guy-livni-site/./src/components/Sections/Sections.tsx","webpack://guy-livni-site/./src/components/Sections/index.ts","webpack://guy-livni-site/./src/components/Seo/index.ts","webpack://guy-livni-site/./src/components/Seo/Seo.tsx","webpack://guy-livni-site/./src/components/Hero/Hero.styled.tsx","webpack://guy-livni-site/./src/components/Hero/index.ts","webpack://guy-livni-site/./src/components/Hero/Hero.tsx","webpack://guy-livni-site/./src/pages/index.tsx"],"names":["Container","styled","children","rest","SectionsContainer","sections","components","map","section","index","__typename","Component","key","description","lang","meta","keywords","title","metadata","useSiteData","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","siteUrl","author","concat","length","join","theme","css","transitions","default","colors","p000","device","desktop","wideDesktop","extraWideDesktop","PreTitle","p300","animations","tablet","PostTitle","Title","p400","fontWeight","bold","titlePrefix","socialLinks","Social","links","showTitle","animate","ContentfulHero","Hero","contentfulPage","data","pageMetadata","siteMetadata","Fragment","Sections"],"mappings":"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","file":"component---src-pages-index-tsx-06f963a61baa73ad6753.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled('div')`\n  margin-bottom: 40px;\n\n  :only-child,\n  :last-child {\n    margin: 0;\n  }\n`;\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Section = ({ children, ...rest }: Props) => {\n  return <Container {...rest}>{children}</Container>;\n};\n\nexport default Section;\n","import Section from './Section';\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Section from './components/Section';\n\nconst SectionsContainer = styled('div')`\n  width: 100%;\n`;\n\ntype SectionProps = {\n  __typename: string;\n};\n\ntype Props = {\n  sections: SectionProps[];\n  components: Record<string, React.ElementType>;\n};\n\nconst Sections = ({ sections, components, ...rest }: Props) => {\n  return (\n    <SectionsContainer>\n      {sections.map((section, index) => {\n        const { __typename } = section;\n        const Component = components?.[__typename];\n\n        if (!Component) {\n          return null;\n        }\n\n        return (\n          <Section key={index}>\n            <Component {...{ ...section, ...rest }} />\n          </Section>\n        );\n      })}\n    </SectionsContainer>\n  );\n};\n\nexport default Sections;\n","import Sections from './Sections';\n\nexport default Sections;\n","import Seo from './Seo';\n\nexport default Seo;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useSiteData } from '../../hooks';\n\ntype Props = {\n  description?: string;\n  lang?: string;\n  meta?: [];\n  keywords?: string[];\n  title: string;\n};\n\nconst SEO = ({\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n  title,\n}: Props) => {\n  const { metadata } = useSiteData();\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${metadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:url',\n          content: metadata.siteUrl,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: metadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n};\n\nexport default SEO;\n","import styled, { css, DefaultTheme } from 'styled-components';\nimport { animations } from '../../styles';\n\nconst containerStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding: 10px 0;\n  transform: rotate(0deg) scale(1) translateX(0) translateZ(0px)\n    perspective(100px);\n  transition: all ${theme.transitions.default};\n  cursor: default;\n  background-color: ${theme.colors.p000};\n\n  @media ${theme.device.desktop} {\n    padding: 0;\n    :hover {\n      transform: rotate(-0.5deg) scale(1.1) translateX(25px) translateY(-15px)\n        translateZ(5px) perspective(100px);\n    }\n  }\n\n  @media ${theme.device.wideDesktop} {\n    max-width: 90%;\n  }\n\n  @media ${theme.device.extraWideDesktop} {\n    max-width: 80%;\n  }\n`;\n\nexport const Container = styled('div')`\n  ${containerStyles}\n`;\n\nconst preStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  margin: 0;\n  align-self: end;\n  color: ${theme.colors.p300};\n  font-size: 40px;\n  animation: ${animations.fadeInUp} 0.6s 0.2s ease-out both;\n\n  @media ${theme.device.tablet} {\n    font-size: 50px;\n  }\n\n  @media ${theme.device.wideDesktop} {\n    font-size: 60px;\n  }\n`;\n\nexport const PreTitle = styled('span')`\n  ${preStyles}\n`;\n\nconst postTitleStyles = () => css`\n  animation: ${animations.fadeInUp} 0.6s 0.6s ease-out both;\n`;\n\nexport const PostTitle = styled('span')`\n  ${postTitleStyles}\n`;\n\nconst titleStyles = ({ theme }: { theme: DefaultTheme }) => css`\n  color: ${theme.colors.p400};\n  font-size: 40px;\n  font-weight: ${theme.fontWeight.bold};\n  margin: 0 0 15px 0;\n  animation: ${animations.fadeInUp} 0.6s 0.3s ease-out both;\n\n  @media ${theme.device.tablet} {\n    font-size: 50px;\n    margin: 0 0 30px 0;\n  }\n\n  @media ${theme.device.wideDesktop} {\n    font-size: 60px;\n  }\n`;\n\nexport const Title = styled('h1')`\n  ${titleStyles}\n`;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React from 'react';\nimport Social from '../Social';\nimport { Container, Title, PreTitle, PostTitle } from './Hero.styled';\nimport { SocialLinks } from '../../types/Social';\n\ntype Props = {\n  title: string;\n  titlePrefix: string;\n  socialLinks: SocialLinks;\n};\n\nconst Hero = ({ title, titlePrefix, socialLinks }: Props) => (\n  <Container>\n    <Container>\n      <Title>\n        <PreTitle>{titlePrefix} </PreTitle>\n        <PostTitle>{title}</PostTitle>\n      </Title>\n    </Container>\n    <Social links={socialLinks} showTitle animate />\n  </Container>\n);\n\nexport default Hero;\n","import React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\n\nimport Hero from '../components/Hero';\nimport SEO from '../components/Seo';\nimport Sections from '../components/Sections';\nimport { useSiteData } from '../hooks';\nimport { Page } from '../types/Page';\n\nconst components = {\n  ContentfulHero: Hero,\n};\n\ntype IndexPageProps = {\n  data: Page;\n};\n\nconst IndexPage = ({ data }: IndexPageProps) => {\n  const { contentfulPage } = data;\n  const { metadata: pageMetadata, sections } = contentfulPage;\n  const { metadata: siteMetadata } = useSiteData();\n\n  return (\n    <Fragment>\n      <SEO title={pageMetadata.title} keywords={[pageMetadata.keywords]} />\n      <Sections\n        sections={sections}\n        components={components}\n        {...{\n          socialLinks: siteMetadata.socialLinks,\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    #Home Page\n    contentfulPage(contentful_id: { eq: \"1xqW3gYNBTryNOCsliNEqk\" }) {\n      sections {\n        ... on ContentfulHero {\n          name\n          titlePrefix\n          title\n          __typename\n        }\n      }\n      metadata {\n        title\n        keywords\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}