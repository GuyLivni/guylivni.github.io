{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Sections/components/Section/Section.js","webpack:///./src/components/Sections/components/Section/index.js","webpack:///./src/components/Sections/Sections.js","webpack:///./src/components/Sections/index.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/ShortText/ShortText.js","webpack:///./src/components/ShortText/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Seo__WEBPACK_IMPORTED_MODULE_2__","_components_Sections__WEBPACK_IMPORTED_MODULE_3__","components","ContentfulShortText","ShortText","NotFoundPage","_ref","sections","data","contentfulPage","a","createElement","title","propTypes","PropTypes","object","isRequired","Container","styled","withConfig","componentId","Section","children","rest","objectWithoutPropertiesLoose_default","react_default","Sections","map","section","index","__typename","Component","components_Section","key","Object","assign","array","SEO","description","lang","meta","keywords","metadata","useSiteData","metaDescription","Helmet_default","htmlAttributes","titleTemplate","name","content","property","siteUrl","author","concat","length","join","defaultProps","string","arrayOf","Seo","Title","theme","css","colors","p600","Text","_ref2","react"],"mappings":"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","file":"component---src-pages-404-js-a4f20798caa1448bf21f.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport SEO from '../components/Seo';\nimport Sections from '../components/Sections';\nimport ShortText from '../components/ShortText';\n\nconst components = {\n  ContentfulShortText: ShortText,\n};\n\nfunction NotFoundPage({ data }) {\n  const { contentfulPage } = data;\n  const { sections } = contentfulPage;\n\n  return (\n    <Fragment>\n      <SEO title=\"404: Not Found\" />\n      <Sections sections={sections} components={components} />\n    </Fragment>\n  );\n}\n\nNotFoundPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    #Not Found Page\n    contentfulPage(contentful_id: { eq: \"6iWKFWMB8etBQryXgs5O8D\" }) {\n      sections {\n        ... on ContentfulShortText {\n          name\n          title\n          content {\n            content\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled('div')`\n  margin-bottom: 40px;\n  width: 100%;\n\n  :only-child,\n  :last-child {\n    margin: 0;\n  }\n`;\n\nfunction Section({ children, ...rest }) {\n  return <Container {...rest}>{children}</Container>;\n}\n\nSection.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import Section from './Section';\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from './components/Section';\n\nfunction Sections({ sections, components, ...rest }) {\n  return sections.map((section, index) => {\n    const { __typename } = section;\n    const Component = components[__typename];\n\n    if (!Component) {\n      return null;\n    }\n\n    return (\n      <Section key={index}>\n        <Component {...{ ...section, ...rest }} />\n      </Section>\n    );\n  });\n}\n\nSections.propTypes = {\n  sections: PropTypes.array.isRequired,\n  components: PropTypes.object.isRequired,\n};\n\nexport default Sections;\n","import Sections from './Sections';\n\nexport default Sections;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useSiteData } from '../../hooks';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { metadata } = useSiteData();\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${metadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:url',\n          content: metadata.siteUrl,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: metadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Seo from './Seo';\n\nexport default Seo;\n","import React, { Fragment } from 'react';\nimport styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst titleStyles = ({ theme }) => css`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  font-size: 3.5rem;\n  color: ${theme.colors.p600};\n  text-align: center;\n`;\n\nconst Title = styled('h1')`\n  ${titleStyles}\n`;\n\nconst Text = styled('p')`\n  text-align: center;\n`;\n\nfunction ShortText({ title, content }) {\n  return (\n    <Fragment>\n      <Title>{title}</Title>\n      <Text>{content && content.content}</Text>\n    </Fragment>\n  );\n}\n\nShortText.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.object,\n};\n\nexport default ShortText;\n","import ShortText from './ShortText';\n\nexport default ShortText;\n"],"sourceRoot":""}