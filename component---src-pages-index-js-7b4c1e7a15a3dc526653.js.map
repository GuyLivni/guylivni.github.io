{"version":3,"sources":["webpack://guy-livni-site/./src/components/Sections/components/Section/Section.js","webpack://guy-livni-site/./src/components/Sections/components/Section/index.js","webpack://guy-livni-site/./src/components/Sections/Sections.js","webpack://guy-livni-site/./src/components/Sections/index.js","webpack://guy-livni-site/./src/components/Seo/Seo.js","webpack://guy-livni-site/./src/components/Seo/index.js","webpack://guy-livni-site/./src/components/Hero/Hero.js","webpack://guy-livni-site/./src/components/Hero/index.js","webpack://guy-livni-site/./src/pages/index.js"],"names":["Container","styled","children","rest","SectionsContainer","sections","components","map","section","index","__typename","Component","key","SEO","description","lang","meta","keywords","title","metadata","useSiteData","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","siteUrl","author","concat","length","join","defaultProps","theme","css","device","desktop","wideDesktop","PreTitle","colors","p300","animations","tablet","PostTitle","Title","p400","fontWeight","bold","titlePrefix","socialLinks","Social","links","showTitle","animate","ContentfulHero","Hero","location","contentfulPage","data","pageMetadata","siteMetadata","Fragment","Sections"],"mappings":"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","file":"component---src-pages-index-js-7b4c1e7a15a3dc526653.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled('div')`\n  margin-bottom: 40px;\n\n  :only-child,\n  :last-child {\n    margin: 0;\n  }\n`;\n\nfunction Section({ children, ...rest }) {\n  return <Container {...rest}>{children}</Container>;\n}\n\nSection.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import Section from './Section';\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Section from './components/Section';\n\nconst SectionsContainer = styled('div')`\n  width: 100%;\n`;\n\nfunction Sections({ sections, components, ...rest }) {\n  return (\n    <SectionsContainer>\n      {sections.map((section, index) => {\n        const { __typename } = section;\n        const Component = components[__typename];\n\n        if (!Component) {\n          return null;\n        }\n\n        return (\n          <Section key={index}>\n            <Component {...{ ...section, ...rest }} />\n          </Section>\n        );\n      })}\n    </SectionsContainer>\n  );\n}\n\nSections.propTypes = {\n  sections: PropTypes.array.isRequired,\n  components: PropTypes.object.isRequired,\n};\n\nexport default Sections;\n","import Sections from './Sections';\n\nexport default Sections;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useSiteData } from '../../hooks';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { metadata } = useSiteData();\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${metadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:url',\n          content: metadata.siteUrl,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: metadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Seo from './Seo';\n\nexport default Seo;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Social from '../Social';\nimport { animations } from '../../styles';\n\nconst containerStyles = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding: 10px 0;\n  transform: rotate(0deg) scale(1) translateX(0) translateZ(0px)\n    perspective(100px);\n  transition: all 0.3s ease;\n  cursor: default;\n\n  @media ${theme.device.desktop} {\n    padding: 0;\n    :hover {\n      transform: rotate(-0.5deg) scale(1.1) translateX(25px) translateY(-15px)\n        translateZ(5px) perspective(100px);\n    }\n  }\n\n  @media ${theme.device.wideDesktop} {\n    width: 80%;\n  }\n`;\n\nconst Container = styled('div')`\n  ${containerStyles}\n`;\n\nconst preStyles = ({ theme }) => css`\n  margin: 0;\n  align-self: end;\n  color: ${theme.colors.p300};\n  font-size: 40px;\n  animation: ${animations.fadeInUp} 0.6s 0.2s ease-out both;\n\n  @media ${theme.device.tablet} {\n    font-size: 50px;\n  }\n\n  @media ${theme.device.wideDesktop} {\n    font-size: 60px;\n  }\n`;\n\nconst PreTitle = styled('span')`\n  ${preStyles}\n`;\n\nconst postTitleStyles = ({ theme }) => css`\n  animation: ${animations.fadeInUp} 0.6s 0.6s ease-out both;\n`;\n\nconst PostTitle = styled('span')`\n  ${postTitleStyles}\n`;\n\nconst titleStyles = ({ theme }) => css`\n  color: ${theme.colors.p400};\n  font-size: 40px;\n  font-weight: ${theme.fontWeight.bold};\n  margin: 0 0 15px 0;\n  animation: ${animations.fadeInUp} 0.6s 0.3s ease-out both;\n\n  @media ${theme.device.tablet} {\n    font-size: 50px;\n    margin: 0 0 30px 0;\n  }\n\n  @media ${theme.device.wideDesktop} {\n    font-size: 60px;\n  }\n`;\n\nconst Title = styled('h1')`\n  ${titleStyles}\n`;\n\nfunction Hero({ title, titlePrefix, description, socialLinks }) {\n  return (\n    <Container>\n      <Container>\n        <Title>\n          <PreTitle>{titlePrefix} </PreTitle>\n          <PostTitle>{title}</PostTitle>\n        </Title>\n      </Container>\n      <Social links={socialLinks} showTitle animate />\n    </Container>\n  );\n}\n\nHero.propTypes = {\n  socialLinks: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  titlePrefix: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default Hero;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Hero from '../components/Hero';\nimport SEO from '../components/Seo';\nimport Sections from '../components/Sections';\n\nimport { useSiteData } from '../hooks';\n\nconst components = {\n  ContentfulHero: Hero,\n};\n\nconst IndexPage = ({ location, data }) => {\n  const { contentfulPage } = data;\n  const { metadata: pageMetadata, sections } = contentfulPage;\n  const { metadata: siteMetadata } = useSiteData();\n\n  return (\n    <Fragment>\n      <SEO title={pageMetadata.title} keywords={[pageMetadata.keywords]} />\n      <Sections\n        sections={sections}\n        components={components}\n        {...{\n          socialLinks: siteMetadata.socialLinks,\n        }}\n      />\n    </Fragment>\n  );\n};\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    #Home Page\n    contentfulPage(contentful_id: { eq: \"1xqW3gYNBTryNOCsliNEqk\" }) {\n      sections {\n        ... on ContentfulHero {\n          name\n          titlePrefix\n          title\n          __typename\n        }\n      }\n      metadata {\n        title\n        keywords\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}