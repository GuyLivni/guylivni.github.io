{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components_Seo__WEBPACK_IMPORTED_MODULE_2__","Title","styled","withConfig","componentId","_ref","theme","css","colors","p400","Text","NotFoundPage","_ref2","contentfulPage","data","title","subTitle","a","createElement","SEO","description","lang","meta","keywords","metadata","useSiteData","metaDescription","react_default","Helmet_default","htmlAttributes","titleTemplate","name","content","property","siteUrl","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Seo"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAA,KASMU,EAAQC,YAAO,MAAVC,WAAA,CAAAC,YAAA,eAAGF,CAAH,QAJS,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAeC,YAAf,eACTD,EAAME,OAAOC,QAOlBC,EAAOR,YAAO,KAAVC,WAAA,CAAAC,YAAA,eAAGF,CAAH,wBAiBKS,UAbf,SAAAC,GAAgC,IACtBC,EADsBD,EAARE,KACdD,eACAE,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAEf,OACEnB,EAAAoB,EAAAC,cAACtB,EAAA,SAAD,KACEC,EAAAoB,EAAAC,cAAClB,EAAA,EAAD,CAAKe,MAAM,mBACXlB,EAAAoB,EAAAC,cAACjB,EAAD,KAAQc,GACRlB,EAAAoB,EAAAC,cAACR,EAAD,KAAOM,KAON,IAAMrB,EAAS,4GC3BtB,SAASwB,EAATd,GAA2D,IAA5Ce,EAA4Cf,EAA5Ce,YAAaC,EAA+BhB,EAA/BgB,KAAMC,EAAyBjB,EAAzBiB,KAAMC,EAAmBlB,EAAnBkB,SAAUR,EAASV,EAATU,MACxCS,EAAaC,cAAbD,SACFE,EAAkBN,GAAeI,EAASJ,YAEhD,OACEO,EAAAV,EAAAC,cAACU,EAAAX,EAAD,CACEY,eAAgB,CACdR,QAEFN,MAAOA,EACPe,cAAa,QAAUN,EAAST,MAChCO,KAAM,CACJ,CACES,KAAI,cACJC,QAASN,GAEX,CACEO,SAAU,SACVD,QAASR,EAASU,SAEpB,CACED,SAAQ,WACRD,QAASjB,GAEX,CACEkB,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAASW,QAEpB,CACEJ,KAAI,gBACJC,QAASjB,GAEX,CACEgB,KAAI,sBACJC,QAASN,IAGVU,OACCb,EAASc,OAAS,EACd,CACEN,KAAI,WACJC,QAAST,EAASe,KAAT,OAEX,IAELF,OAAOd,KAKhBH,EAAIoB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIqB,UAAY,CACdpB,YAAaqB,IAAUC,OACvBrB,KAAMoB,IAAUC,OAChBpB,KAAMmB,IAAUE,MAChBpB,SAAUkB,IAAUG,QAAQH,IAAUC,QACtC3B,MAAO0B,IAAUC,OAAOG,YAGX1B,QC/EA2B","file":"component---src-pages-404-js-9f979fb06fe192376cf1.js","sourcesContent":["import React, { Fragment } from 'react';\nimport styled, { css } from 'styled-components';\nimport { graphql } from 'gatsby';\nimport SEO from '../components/Seo';\n\nconst titleStyles = ({ theme }) => css`\n  color: ${theme.colors.p400};\n`;\n\nconst Title = styled('h1')`\n  ${titleStyles}\n`;\n\nconst Text = styled('p')`\n  text-align: center;\n`;\n\nfunction NotFoundPage({ data }) {\n  const { contentfulPage } = data;\n  const { title, subTitle } = contentfulPage;\n\n  return (\n    <Fragment>\n      <SEO title=\"404: Not Found\" />\n      <Title>{title}</Title>\n      <Text>{subTitle}</Text>\n    </Fragment>\n  );\n}\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    contentfulPage(name: { eq: \"Not found page\" }) {\n      title\n      subTitle\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useSiteData } from '../../hooks';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { metadata } = useSiteData();\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${metadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:url',\n          content: metadata.siteUrl,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: metadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Seo from './Seo';\n\nexport default Seo;\n"],"sourceRoot":""}