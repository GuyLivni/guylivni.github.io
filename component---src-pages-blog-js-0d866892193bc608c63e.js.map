{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/Sections/components/Section/Section.js","webpack:///./src/components/Sections/components/Section/index.js","webpack:///./src/components/Sections/Sections.js","webpack:///./src/components/Sections/index.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/ShortText/ShortText.js","webpack:///./src/components/ShortText/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Seo__WEBPACK_IMPORTED_MODULE_2__","_components_Sections__WEBPACK_IMPORTED_MODULE_3__","components","ContentfulShortText","ShortText","BlogIndex","_ref","contentfulPage","data","sections","metadata","keywords","title","a","createElement","propTypes","PropTypes","object","isRequired","Container","styled","withConfig","componentId","Section","children","rest","objectWithoutPropertiesLoose_default","react_default","SectionsContainer","Sections","map","section","index","__typename","Component","components_Section","key","Object","assign","array","SEO","description","lang","meta","useSiteData","metaDescription","Helmet_default","htmlAttributes","titleTemplate","name","content","property","siteUrl","author","concat","length","join","defaultProps","string","arrayOf","Seo","Title","theme","css","colors","p600","SubTitle","_ref2","Text","_ref3","subTitle","react"],"mappings":"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","file":"component---src-pages-blog-js-0d866892193bc608c63e.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport SEO from '../components/Seo';\nimport Sections from '../components/Sections';\nimport ShortText from '../components/ShortText';\n\n// import { Link, graphql } from \"gatsby\"\n// import Bio from \"../components/bio\"\n// import { rhythm } from \"../styles/typography\"\n\nconst components = {\n  ContentfulShortText: ShortText,\n};\n\nfunction BlogIndex({ data }) {\n  // const { data } = this.props\n  // const siteTitle = data.site.siteMetadata.title\n  // const posts = data.allMarkdownRemark.edges\n\n  const { contentfulPage } = data;\n  const { sections, metadata } = contentfulPage;\n  const { keywords, title } = metadata;\n\n  return (\n    <div>\n      <SEO title={title} keywords={[keywords]} />\n      <Sections sections={sections} components={components} />\n      {/* <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <div key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4),\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h3>\n            <small>{node.frontmatter.date}</small>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: node.frontmatter.description || node.excerpt,\n              }}\n            />\n          </div>\n        )\n      })} */}\n    </div>\n  );\n}\n\nBlogIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    #Blog Page\n    contentfulPage(contentful_id: { eq: \"44xUPgtLm0HnjpMxsvMwZF\" }) {\n      sections {\n        ... on ContentfulShortText {\n          name\n          title\n          content {\n            content\n          }\n        }\n      }\n      metadata {\n        title\n        keywords\n      }\n    }\n  }\n`;\n\n// export const pageQuery = graphql`\n//   query {\n//     site {\n//       siteMetadata {\n//         title\n//       }\n//     }\n//     allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n//       edges {\n//         node {\n//           excerpt\n//           fields {\n//             slug\n//           }\n//           frontmatter {\n//             date(formatString: \"MMMM DD, YYYY\")\n//             title\n//             description\n//           }\n//         }\n//       }\n//     }\n//   }\n// `\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled('div')`\n  margin-bottom: 40px;\n\n  :only-child,\n  :last-child {\n    margin: 0;\n  }\n`;\n\nfunction Section({ children, ...rest }) {\n  return <Container {...rest}>{children}</Container>;\n}\n\nSection.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import Section from './Section';\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Section from './components/Section';\n\nconst SectionsContainer = styled('div')`\n  width: 100%;\n`;\n\nfunction Sections({ sections, components, ...rest }) {\n  return (\n    <SectionsContainer>\n      {sections.map((section, index) => {\n        const { __typename } = section;\n        const Component = components[__typename];\n\n        if (!Component) {\n          return null;\n        }\n\n        return (\n          <Section key={index}>\n            <Component {...{ ...section, ...rest }} />\n          </Section>\n        );\n      })}\n    </SectionsContainer>\n  );\n}\n\nSections.propTypes = {\n  sections: PropTypes.array.isRequired,\n  components: PropTypes.object.isRequired,\n};\n\nexport default Sections;\n","import Sections from './Sections';\n\nexport default Sections;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useSiteData } from '../../hooks';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { metadata } = useSiteData();\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${metadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:url',\n          content: metadata.siteUrl,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: metadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Seo from './Seo';\n\nexport default Seo;\n","import React, { Fragment } from 'react';\nimport styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst titleStyles = ({ theme }) => css`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  font-size: 3.5rem;\n  color: ${theme.colors.p600};\n  text-align: center;\n`;\n\nconst Title = styled('h1')`\n  ${titleStyles}\n`;\n\nconst subTitleStyles = ({ theme }) => css`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n  color: ${theme.colors.p600};\n  text-align: center;\n`;\n\nconst SubTitle = styled('h2')`\n  ${subTitleStyles}\n`;\n\nconst Text = styled('p')`\n  text-align: center;\n`;\n\nfunction ShortText({ title, subTitle, content }) {\n  return (\n    <Fragment>\n      <Title>{title}</Title>\n      {subTitle && <SubTitle>{subTitle}</SubTitle>}\n      {content && <Text>{content.content}</Text>}\n    </Fragment>\n  );\n}\n\nShortText.propTypes = {\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  content: PropTypes.object,\n};\n\nexport default ShortText;\n","import ShortText from './ShortText';\n\nexport default ShortText;\n"],"sourceRoot":""}