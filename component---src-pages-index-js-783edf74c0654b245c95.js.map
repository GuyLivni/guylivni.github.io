{"version":3,"sources":["webpack:///./src/components/Hero/Hero.js","webpack:///./src/components/Hero/index.js","webpack:///./src/components/Social/Social.js","webpack:///./src/components/Social/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js"],"names":["Container","styled","withConfig","componentId","PreTitle","_ref","theme","css","colors","p400","Title","_ref2","media","medium","_templateObject","SubTitle","_ref3","p300","Image","GatsbyImage","_ref4","Hero","_ref5","avatar","react_default","a","createElement","fixed","childImageSharp","alt","Href","StyledIcon","component","props","objectWithoutPropertiesLoose_default","React","cloneElement","p600","Social","twitter","github","linkedin","icons","Icon","FaGithub","url","FaMedium","FaTwitter","FaLinkedinIn","Social_Container","map","index","key","href","target","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","location","data","socialLinks","site","siteMetadata","social","react","Seo","title","keywords","components_Hero","components_Social","SEO","description","lang","meta","_2417117884","metaDescription","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-index-js-783edf74c0654b245c95.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { media } from '../../utils/style-helpers';\n\nconst Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst preStyles = ({ theme }) => css`\n  margin: 0;\n  align-self: end;\n  color: ${theme.colors.p400};\n`;\n\nconst PreTitle = styled('p')`\n  ${preStyles}\n`;\n\nconst titleStyles = ({ theme }) => css`\n  color: ${theme.colors.p400};\n  font-size: 60px;\n  font-weight: 300;\n  margin: 0 10px 20px;\n\n  ${media.medium`\n   font-size: 80px;\n`};\n`;\n\nconst Title = styled('h1')`\n  ${titleStyles}\n`;\n\nconst subTitleStyles = ({ theme }) => css`\n  color: ${theme.colors.p300};\n  font-size: 23px;\n  font-weight: 200;\n`;\n\nconst SubTitle = styled('p')`\n  ${subTitleStyles}\n`;\n\nconst imageStyles = ({ theme }) => css`\n  border-radius: 50%;\n  left: 0;\n  top: 0;\n  border: 5px solid ${theme.colors.p400};\n  margin: 0;\n`;\n\nconst Image = styled(GatsbyImage)`\n  ${imageStyles}\n`;\n\nfunction Hero({ avatar }) {\n  return (\n    <Container>\n      <Image fixed={avatar.childImageSharp.fixed} alt=\"GuyLivni\" />\n      <PreTitle>Hey, </PreTitle>\n      <Title>I'm Guy,</Title>\n      <SubTitle>a software engineer.</SubTitle>\n    </Container>\n  );\n}\n\nexport default Hero;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { FaLinkedinIn, FaGithub, FaTwitter, FaMedium } from 'react-icons/fa/';\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Href = styled('a')`\n  box-shadow: none;\n`;\n\nconst iconStyles = ({ theme }) => css`\n  font-size: 20px;\n  color: ${theme.colors.p300};\n  margin: 0 10px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  :hover {\n    color: ${theme.colors.p600};\n  }\n`;\n\nconst StyledIcon = styled(({ component, ...props }) =>\n  React.cloneElement(component, props)\n)`\n  ${iconStyles}\n`;\n\nfunction Social({ twitter, github, linkedin, medium }) {\n  const icons = [\n    { Icon: FaGithub, url: github },\n    { Icon: FaMedium, url: medium },\n    { Icon: FaTwitter, url: twitter },\n    { Icon: FaLinkedinIn, url: linkedin },\n  ];\n\n  return (\n    <Container>\n      {icons.map(({ Icon, url }, index) => (\n        <Href key={index} href={url} target=\"_blank\">\n          <StyledIcon component={<Icon />} />\n        </Href>\n      ))}\n    </Container>\n  );\n}\n\nexport default Social;\n","import Social from './Social';\n\nexport default Social;\n","import React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\n\nimport Hero from '../components/Hero';\nimport Social from '../components/Social';\nimport SEO from '../components/Seo';\n\nconst IndexPage = ({ location, data }) => {\n  const { avatar, site } = data;\n  const socialLinks = site.siteMetadata.social;\n\n  return (\n    <Fragment>\n      <SEO title=\"Home\" keywords={[`guylivni, guy livni site`]} />\n      <Hero avatar={avatar} />\n      <Social {...socialLinks} />\n    </Fragment>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    avatar: file(absolutePath: { regex: \"/guy-profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 150, height: 150) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n          linkedin\n          medium\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Seo from './Seo';\n\nexport default Seo;\n"],"sourceRoot":""}