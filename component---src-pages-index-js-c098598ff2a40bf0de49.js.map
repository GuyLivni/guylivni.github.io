{"version":3,"sources":["webpack:///./src/components/Hero/Hero.js","webpack:///./src/components/Hero/index.js","webpack:///./src/components/Social/Social.js","webpack:///./src/components/Social/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js"],"names":["Container","styled","withConfig","componentId","PreTitle","_ref","theme","css","colors","p600","fontWeight","bold","Title","_ref2","styleHelpers","media","medium","_templateObject","SubTitle","_ref3","Image","GatsbyImage","_ref4","Hero","_ref5","avatar","react_default","a","createElement","fixed","childImageSharp","alt","Href","StyledIcon","component","props","objectWithoutPropertiesLoose_default","React","cloneElement","p400","Social","twitter","github","linkedin","icons","Icon","FaGithub","url","name","FaMedium","FaTwitter","FaLinkedinIn","Social_Container","map","index","aria-label","key","href","target","rel","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","location","data","socialLinks","site","siteMetadata","social","react","Seo","title","keywords","components_Hero","components_Social","SEO","description","lang","meta","_2417117884","metaDescription","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-index-js-c098598ff2a40bf0de49.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { styleHelpers } from '../../styles';\n\nconst Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst preStyles = ({ theme }) => css`\n  margin: 0;\n  align-self: end;\n  color: ${theme.colors.p600};\n  font-size: 20px;\n  font-weight: ${theme.fontWeight.bold};\n`;\n\nconst PreTitle = styled('p')`\n  ${preStyles}\n`;\n\nconst titleStyles = ({ theme }) => css`\n  color: ${theme.colors.p600};\n  font-size: 75px;\n  font-weight: ${theme.fontWeight.bold};\n  margin: 0;\n\n  ${styleHelpers.media.medium`\n    margin: 0 10px 20px;\n    font-size: 90px;\n    font-weight: ${theme.fontWeight.medium};\n  `};\n`;\n\nconst Title = styled('h1')`\n  ${titleStyles}\n`;\n\nconst subTitleStyles = ({ theme }) => css`\n  color: ${theme.colors.p600};\n  font-size: 23px;\n  font-weight: ${theme.fontWeight.bold};\n`;\n\nconst SubTitle = styled('p')`\n  ${subTitleStyles}\n`;\n\nconst imageStyles = ({ theme }) => css`\n  border-radius: 50%;\n  left: 0;\n  top: 0;\n  border: 5px solid ${theme.colors.p600};\n  margin: 0;\n`;\n\nconst Image = styled(GatsbyImage)`\n  ${imageStyles}\n`;\n\nfunction Hero({ avatar }) {\n  return (\n    <Container>\n      <Image fixed={avatar.childImageSharp.fixed} alt=\"GuyLivni\" />\n      <PreTitle>Hey, </PreTitle>\n      <Title>I'm Guy,</Title>\n      <SubTitle>a software engineer.</SubTitle>\n    </Container>\n  );\n}\n\nexport default Hero;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { FaLinkedinIn, FaGithub, FaTwitter, FaMedium } from 'react-icons/fa/';\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Href = styled('a')`\n  box-shadow: none;\n`;\n\nconst iconStyles = ({ theme }) => css`\n  font-size: 20px;\n  color: ${theme.colors.p600};\n  margin: 0 10px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  :hover {\n    color: ${theme.colors.p400};\n  }\n`;\n\nconst StyledIcon = styled(({ component, ...props }) =>\n  React.cloneElement(component, props)\n)`\n  ${iconStyles}\n`;\n\nfunction Social({ twitter, github, linkedin, medium }) {\n  const icons = [\n    { Icon: FaGithub, url: github, name: 'github' },\n    { Icon: FaMedium, url: medium, name: 'medium' },\n    { Icon: FaTwitter, url: twitter, name: 'twitter' },\n    { Icon: FaLinkedinIn, url: linkedin, name: 'linkedin' },\n  ];\n\n  return (\n    <Container>\n      {icons.map(({ Icon, url, name }, index) => (\n        <Href\n          aria-label={name}\n          key={index}\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <StyledIcon component={<Icon />} />\n        </Href>\n      ))}\n    </Container>\n  );\n}\n\nexport default Social;\n","import Social from './Social';\n\nexport default Social;\n","import React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\n\nimport Hero from '../components/Hero';\nimport Social from '../components/Social';\nimport SEO from '../components/Seo';\n\nconst IndexPage = ({ location, data }) => {\n  const { avatar, site } = data;\n  const socialLinks = site.siteMetadata.social;\n\n  return (\n    <Fragment>\n      <SEO title=\"Home\" keywords={[`guylivni, guy livni site`]} />\n      <Hero avatar={avatar} />\n      <Social {...socialLinks} />\n    </Fragment>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    avatar: file(absolutePath: { regex: \"/guy-profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 150, height: 150) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n          linkedin\n          medium\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Seo from './Seo';\n\nexport default Seo;\n"],"sourceRoot":""}